<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dtstack.rdos.engine.service.db.mapper.RdosEngineBatchJobMapper">
	
	<resultMap id="rdosEngineTaskResult" type="com.dtstack.rdos.engine.service.db.dataobject.RdosEngineBatchJob">
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
        <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
        <result column="exec_start_time" property="execStartTime" jdbcType="TIMESTAMP"/>
        <result column="exec_end_time" property="execEndTime" jdbcType="TIMESTAMP"/>
        <result column="exec_time" property="execTime" jdbcType="BIGINT"/>
        <result column="job_id" property="jobId" jdbcType="VARCHAR" />
        <result column="engine_job_id" property="engineJobId" jdbcType="VARCHAR" />
        <result column="plugin_info_id" property="pluginInfoId" jdbcType="BIGINT"/>
        <result column="status" property="status" jdbcType="INTEGER" />
        <result column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
        <result column="engine_log" property="engineLog" jdbcType="VARCHAR"/>
        <result column="log_info" property="logInfo" jdbcType="VARCHAR"/>
        <result column="source_type" property="sourceType" jdbcType="INTEGER" />
    </resultMap>
	
   <insert id="insert" parameterType="com.dtstack.rdos.engine.service.db.dataobject.RdosEngineBatchJob">
	   insert into rdos_engine_batch_job(gmt_create,gmt_modified,job_id,status)
	   values(now(),now(),#{jobId},#{status})
	   <selectKey resultType="long" keyProperty="id" order="AFTER">
	      SELECT LAST_INSERT_ID() AS ID
	   </selectKey>
    </insert>

    <update id="jobFail" parameterType="java.util.HashMap">
        update rdos_engine_batch_job set exec_start_time=now(), exec_end_time=now(), exec_time = 0,gmt_modified=now(),status=#{status}, log_info = #{logInfo} where job_id=#{jobId};
    </update>
	
   <update id="updateJobStatus" parameterType="java.util.HashMap">
	   update rdos_engine_batch_job set gmt_modified=now(),status=#{status} where job_id=#{jobId};
   </update>

    <update id="updateJobPluginId" parameterType="java.util.HashMap">
        update rdos_engine_batch_job set gmt_modified=now(), plugin_info_id=#{pluginId} where job_id=#{jobId};
    </update>
   
   <update id="updateJobEngineId" parameterType="java.util.HashMap">
	   update rdos_engine_batch_job set gmt_modified=now(),exec_start_time=now(),engine_job_id=#{engineId} where job_id=#{jobId};
   </update>

   <update id="updateJobEngineIdAndStatus" parameterType="java.util.HashMap">
       update rdos_engine_batch_job set gmt_modified=now(),exec_start_time=now(),engine_job_id=#{engineId},status=#{status} where job_id=#{jobId};
   </update>
   
   <update id="updateJobStatusAndExecTime" parameterType="java.util.HashMap">
	   update rdos_engine_batch_job set gmt_modified=now(), exec_end_time=now(), status=#{status}, exec_time=timestampdiff(SECOND, exec_start_time, now()) where job_id=#{jobId};
   </update>
   
   <select id="getRdosJobByJobId" parameterType="java.util.HashMap" resultMap="rdosEngineTaskResult">
       select * from rdos_engine_batch_job where job_id=#{jobId} and is_deleted=0;
   </select>

    <select id="getRdosJobByJobIds" parameterType="java.util.HashMap" resultMap="rdosEngineTaskResult">
        select job_id, engine_job_id,plugin_info_id,status,engine_log,log_info,exec_start_time,exec_end_time,exec_time,gmt_create,gmt_modified,is_deleted,source_type from rdos_engine_batch_job
        where job_id IN
        <foreach item="jobId" index="index" collection="jobIds" open="(" separator="," close=")">
            #{jobId}
        </foreach>
        and is_deleted=0;
    </select>
   
    <update id="updateEngineLog">
        update rdos_engine_batch_job set engine_log = #{engineLog},gmt_modified=now() where job_id = #{jobId}
    </update>
    
     <update id="updateSubmitLog">
        update rdos_engine_batch_job set log_info = #{submitLog}, gmt_modified=now() where job_id = #{jobId}
    </update>
</mapper>
