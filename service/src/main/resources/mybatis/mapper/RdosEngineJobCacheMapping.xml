<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dtstack.rdos.engine.service.db.mapper.RdosEngineJobCacheMapper">
	
	<resultMap id="rdosEngineJobCacheResult" type="com.dtstack.rdos.engine.service.db.dataobject.RdosEngineJobCache">
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
        <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
        <result column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
        <result column="job_id" property="jobId" jdbcType="VARCHAR" />
        <result column="job_info" property="jobInfo" jdbcType="VARCHAR" />
        <result column="engine_type" property="engineType" jdbcType="VARCHAR"/>
        <result column="compute_type" property="computeType" jdbcType="INTEGER"/>
        <result column="node_address" property="nodeAddress" jdbcType="VARCHAR"/>
        <result column="job_name" property="jobName" jdbcType="VARCHAR"/>
        <result column="stage" property="stage" jdbcType="INTEGER"/>
    </resultMap>

    <insert id="insert">
        replace into rdos_engine_job_cache( job_id, engine_type, compute_type, stage, job_info, node_address, job_name)
        values(#{jobId}, #{engineType}, #{computeType}, #{stage}, #{jobInfo}, #{nodeAddress},#{jobName});
    </insert>

    <delete id="delete">
        delete from rdos_engine_job_cache where job_id=#{jobId}
    </delete>

    <select id="getOne" resultMap="rdosEngineJobCacheResult">
        select * from rdos_engine_job_cache where job_id=#{jobId} and is_deleted=0 order by gmt_create desc limit 1;
    </select>

    <update id="updateStage">
        update rdos_engine_job_cache set node_address = #{nodeAddress}, stage = #{stage} where job_id = #{jobId}
    </update>

    <select id="listByStage" resultMap="rdosEngineJobCacheResult">
        select * from rdos_engine_job_cache
        where id > #{id} and (node_address = #{nodeAddress} or node_address is null)
        <if test="stage != null">
            and stage = #{stage}
        </if>
        and is_deleted=0 order by id asc limit 500;
    </select>

    <select id="getByJobIds" resultMap="rdosEngineJobCacheResult">
        select * from rdos_engine_job_cache
        WHERE job_id in
        <foreach collection="jobIds" item="jobId" open="(" separator="," close=")">
            #{jobId}
        </foreach>
        and is_deleted=0
    </select>

    <select id="listNames" parameterType="java.lang.String" resultType="java.lang.String">
        select job_name from rdos_engine_job_cache where job_name like '%${jobName}%' and compute_type = #{computeType} and is_deleted=0;
    </select>

</mapper>
