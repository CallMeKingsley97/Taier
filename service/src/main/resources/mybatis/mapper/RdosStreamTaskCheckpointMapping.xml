<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dtstack.rdos.engine.service.db.mapper.RdosStreamTaskCheckpointMapper">

    <resultMap id="rdosStreamCheckpointResult" type="com.dtstack.rdos.engine.service.db.dataobject.RdosStreamTaskCheckpoint">
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
        <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
        <result column="task_id" property="taskId" jdbcType="VARCHAR"/>
        <result column="task_engine_id" property="taskEngineId" jdbcType="VARCHAR"/>
        <result column="checkpoint" property="checkpoint" jdbcType="VARCHAR"/>
        <result column="trigger_start" property="triggerStart" jdbcType="TIMESTAMP"/>
        <result column="trigger_end" property="triggerEnd" jdbcType="TIMESTAMP"/>
        <result column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
    </resultMap>

    <sql id="select_content_fragment">
        id,task_id,task_engine_id,checkpoint,trigger_start,trigger_end,gmt_create,gmt_modified,is_deleted
    </sql>

    <insert id="insert">
        replace into rdos_stream_task_checkpoint( task_id, task_engine_id, checkpoint, trigger_start, trigger_end)
        values(#{taskId}, #{engineTaskId}, #{checkpoint}, #{triggerStart}, #{triggerEnd});
    </insert>

    <select id="listByTaskIdAndRangeTime" resultMap="rdosStreamCheckpointResult">
        select
        <include refid="select_content_fragment"/>
        from rdos_stream_task_checkpoint
        where is_deleted=0 and task_id=#{taskId}
        <if test="triggerStart != null and triggerEnd != null">
            and (UNIX_TIMESTAMP(trigger_start)>=#{triggerStart} or #{triggerEnd}>=UNIX_TIMESTAMP(trigger_start))
        </if>
        order by gmt_modified asc
    </select>

    <select id="getByTaskIdAndEngineTaskId" resultMap="rdosStreamCheckpointResult">
        select
        <include refid="select_content_fragment"/>
        from rdos_stream_task_checkpoint
        where is_deleted=0 and task_id=#{taskId}
        and task_engine_id = #{taskEngineId}
        order by gmt_modified asc limit 1
    </select>

    <update id="updateCheckpoint">
        update rdos_stream_task_checkpoint
        set checkpoint = #{checkpoint}
        where task_id=#{taskId}
    </update>

</mapper>