{"version":3,"sources":["workbench/workbench.tsx","extensions/activityBar/index.ts","extensions/index.ts","layout/nav.tsx","App.tsx","layout/layout.tsx","App2.tsx","microApps.ts","reportWebVitals.ts","index.tsx"],"names":["App","extensions","extensionCtx","Navbar","AppContainer","Header","Layout","Content","MyLayout","props","children","style","position","height","className","width","minWidth","marginRight","mode","defaultSelectedKeys","Item","href","id","container","registerMicroApps","name","entry","activeRule","scripts","start","setDefaultMountApp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App2","document","getElementById"],"mappings":"gQAUeA,MANf,WACE,OACE,cAAC,IAAD,K,gCCQG,ICXMC,EAA2B,CAAE,IDW1C,wFAEI,SAASC,QAFb,O,cE2BeC,IC/BFC,EAAe,eAebJ,ICrBPK,EAAoBC,IAApBD,OAAQE,EAAYD,IAAZC,QAED,SAASC,EAASC,GAC7B,IAAQC,EAAaD,EAAbC,SAER,OACI,eAAC,IAAD,CAAQC,MAAO,CAAEC,SAAU,WAAYC,OAAQ,QAA/C,UACI,eAACR,EAAD,CAAQS,UAAU,mBAAmBH,MAAO,CAAEI,MAAO,OAAQC,SAAU,KAAvE,UACI,qBAAKF,UAAU,6BAA6BH,MAAO,CAAEM,YAAa,QAAlE,SACI,sBAAMH,UAAU,kBAAhB,4BAEJ,eAAC,IAAD,CACII,KAAK,aACLC,oBAAqB,CAAC,WAF1B,UAII,cAAC,IAAKC,KAAN,UAA4B,mBAAGC,KAAK,YAAR,iCAAb,cACf,cAAC,IAAKD,KAAN,UAAyB,mBAAGC,KAAK,OAAR,uCAAV,WACf,cAAC,IAAKD,KAAN,UAA2B,mBAAGC,KAAK,aAAR,uCAAZ,aACf,cAAC,IAAKD,KAAN,UAAyB,mBAAGC,KAAK,cAAR,iCAAV,iBAGvB,cAAC,IAAD,UACI,cAACd,EAAD,CAASe,GAAIlB,EAAcU,UAAU,eAArC,SACMJ,S,OCNPV,MAVf,WACE,OACE,cAAC,IAAD,CAAkBC,WAAYA,EAA9B,SACE,cAAC,EAAD,UACI,cAAC,EAAD,S,kBCZJsB,EAAS,WAAOnB,GAEtBoB,YAAkB,CAChB,CACEC,KAAM,MACNC,MAAO,mBACPH,UAAWA,EACXI,WAAY,QAEd,CACEF,KAAM,YACNC,MAAO,mCACPH,UAAWA,EACXI,WAAY,cAEd,CACEF,KAAM,eACNC,MAAO,WACPH,UAAWA,EACXI,WAAY,eACZ,CACAF,KAAM,WACNC,MAAO,CAAEE,QAAS,CAAC,6BACnBL,UAAWA,EACXI,WAAY,eAIhBE,cAEAC,YAAmB,QC/BnB,IAYeC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.60b20264.chunk.js","sourcesContent":["import React from 'react';\nimport { Workbench } from 'molecule';\nimport 'molecule/esm/style/mo.css';\n\nfunction App() {\n  return (\n    <Workbench />\n  )\n}\n\nexport default App;\n","import molecule from \"molecule\";\nimport { IExtension } from \"molecule/esm/model\";\n\nexport function init () {\n    // molecule.activityBar.addBar([\n    //     {\n    //         id: '任务',\n    //         title: '任务开发',\n    //         name: '任务开发',\n    //     }\n    // ])\n\n}\n\nexport class ExtendsAccBar implements IExtension {\n  \n    activate(extensionCtx: molecule.IExtensionService): void {\n        init()\n    }\n}\n","import { IExtension } from 'molecule/esm/model';\nimport { ExtendsAccBar } from './activityBar';\n\nexport const extensions: IExtension[] = [ new ExtendsAccBar() ];\n","import React from 'react';\n\nimport molecule from 'molecule';\nimport { IMenuBarItem } from 'molecule/esm/model';\nimport { MenuMode } from 'molecule/esm/components';\nimport './nav.css';\n\nfunction Navbar() {\n  const data: IMenuBarItem[] = [{\n    id: 'ide',\n    name: '任务开发',\n  },{\n    id: 'operation',\n    name: '运维中心',\n  },{\n    id: 'console',\n    name: '控制台',\n  },{\n    id: 'database',\n    name: '数据源',\n  }];\n\n  const handleClick = (e: any, item: any) => {\n    switch(item.id) {\n      default: {\n        window.location.href = `/${item.id}`;\n      }\n    }\n  }\n\n  return (\n      <div className=\"dt-layout-header navbar\">\n        <molecule.component.Menu \n          data={data} \n          onClick={handleClick}\n          mode={MenuMode.Horizontal} \n        />\n      </div>\n  );\n}\n\nexport default Navbar;\n","import React from 'react';\nimport './App.css';\nimport Workbench from './workbench/workbench';\nimport { MoleculeProvider } from 'molecule';\n\n// import Layout from './layout/layout';\n// import 'ant-design-dtinsight-theme/theme/dt-theme/default/index.less';\nimport { extensions } from './extensions';\nimport Nav from './layout/nav';\n\nexport const AppContainer = 'AppContainer';\n\nfunction App() {\n  return (\n    <MoleculeProvider extensions={extensions}>\n      <Nav />\n      {/* <Layout> */}\n        <div className=\"container\">\n          <Workbench />\n        </div>\n      {/* </Layout> */}\n    </MoleculeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { Layout, Menu } from 'antd';\nimport { AppContainer } from '../App';\n\nconst { Header, Content } = Layout;\n\nexport default function MyLayout(props: React.PropsWithChildren<any>) {\n    const { children } = props;\n\n    return (\n        <Layout style={{ position: \"relative\", height: '100%' }}>\n            <Header className=\"dt-layout-header\" style={{ width: \"100%\", minWidth: 100 }}>\n                <div className=\"logo dt-header-log-wrapper\" style={{ marginRight: '50px' }}>\n                    <span className='c-header__title'>DAGScheduleX</span>\n                </div>\n                <Menu\n                    mode=\"horizontal\"\n                    defaultSelectedKeys={['devTask']}\n                >\n                    <Menu.Item key=\"dataSource\"><a href=\"/database\">数据源</a></Menu.Item>\n                    <Menu.Item key=\"devTask\"><a href=\"/ide\">任务开发</a></Menu.Item>\n                    <Menu.Item key=\"operation\"><a href=\"/operation\">运维中心</a></Menu.Item>\n                    <Menu.Item key=\"console\"><a href=\"/console-ui\">控制台</a></Menu.Item>\n                </Menu>\n            </Header>\n            <Layout>\n                <Content id={AppContainer} className=\"dt-container\">\n                    { children }\n                </Content>\n            </Layout>\n        </Layout>\n    )\n}","import React from 'react';\nimport './App.css';\nimport Workbench from './workbench/workbench';\nimport { MoleculeProvider } from 'molecule';\n\nimport Layout from './layout/layout';\nimport 'ant-design-dtinsight-theme/theme/dt-theme/default/index.less';\nimport { extensions } from './extensions';\n\nexport const AppContainer = 'AppContainer';\n\nfunction App() {\n  return (\n    <MoleculeProvider extensions={extensions}>\n      <Layout>\n          <Workbench />\n      </Layout>\n    </MoleculeProvider>\n  );\n}\n\nexport default App;\n","import { registerMicroApps, setDefaultMountApp, start } from 'qiankun';\nimport { AppContainer } from './App';\n\nconst container = `#${AppContainer}`;\n\nregisterMicroApps([\n  {\n    name: 'IDE', // app name registered\n    entry: '//localhost:7100',\n    container: container,\n    activeRule: '/ide',\n  },\n  {\n    name: 'Operation',\n    entry: '//dev.insight.dtstack.cn/console',\n    container: container,\n    activeRule: '/operation',\n  },\n  {\n    name: 'DTConsoleApp',\n    entry: '/console',\n    container: container,\n    activeRule: '/console-ui',\n  },{\n    name: 'Database',\n    entry: { scripts: ['//localhost:7100/main.js'] },\n    container: container,\n    activeRule: '/database',\n  },\n]);\n\nstart();\n\nsetDefaultMountApp('/ide');\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport App2 from './App2';\nimport './microApps';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App2 />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}