akka {
  jvm-exit-on-fatal-error = false
  actor {
    provider = "akka.remote.RemoteActorRefProvider"
    serialize-messages = on
    serializers {
              java = "akka.serialization.JavaSerializer"
              proto = "akka.remote.serialization.ProtobufSerializer"
    }
    serialization-bindings {
        "com.dtstack.engine.common.akka.message.WorkerInfo" = java
        "com.dtstack.engine.common.akka.message.MessageContainerInfos" = java
        "com.dtstack.engine.common.akka.message.MessageGetCheckpoints" = java
        "com.dtstack.engine.common.akka.message.MessageGetEngineLog" = java
        "com.dtstack.engine.common.akka.message.MessageGetEngineMessageByHttp" = java
        "com.dtstack.engine.common.akka.message.MessageGetJobMaster" = java
        "com.dtstack.engine.common.akka.message.MessageGetJobStatus" = java
        "com.dtstack.engine.common.akka.message.MessageJudgeSlots" = java
        "com.dtstack.engine.common.akka.message.MessageStopJob" = java
        "com.dtstack.engine.common.akka.message.MessageSubmitJob" = java
        "com.dtstack.engine.common.enums.RdosTaskStatus" = java
        "java.lang.String" = java
        "com.google.protobuf.Message" = proto
        "com.dtstack.engine.common.pojo.JobResult" = java
        "com.dtstack.engine.common.JobClient" = java
        "com.dtstack.engine.common.JobIdentifier" = java
        "com.dtstack.engine.common.exception.ErrorCode" = java
    }
    default-dispatcher {
      //某个线程在 （返回到线程池 ） 处理下一个 Actor 之前能处理的最大消息数
      throughput = 100
      fork-join-executor.parallelism-factor=20
      fork-join-executor.parallelism-min=40
      fork-join-executor.parallelism-max=200
    }
  }
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  stdout-loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
  }

  ask {
    timeout = 60
    resultTimeout = 60
  }
}