<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dtstack.task.dao.BatchAlarmRecordDao">

    <sql id="select_content_fragment">
      id,project_id,tenant_id,dtuic_tenant_id,app_type,alarm_id,cyc_time,alarm_content,trigger_type,gmt_create,gmt_modified,is_deleted
    </sql>

    <sql id="select_where_fragment">
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            <if test="model.id != null and model.id > 0">
                AND id = #{model.id}
            </if>
            <if test="model.alarmId != null">
                AND alarm_id = #{model.alarmId}
            </if>
            <if test="model.cycTime != null">
                AND cyc_time = #{model.cycTime}
            </if>
            <if test="model.alarmContent != null">
                AND alarm_content = #{model.alarmContent}
            </if>
            <if test="model.triggerType">
                AND trigger_type = #{triggerType}
            </if>
            <if test="model.projectId != null">
                AND project_id = #{model.projectId}
            </if>
            <if test="model.tenantId != null">
                AND tenant_id = #{model.tenantId}
            </if>
            <if test="model.gmtCreate != null">
                AND gmt_create = #{model.gmtCreate}
            </if>
            <if test="model.gmtModified != null">
                AND gmt_modified = #{model.gmtModified}
            </if>
            <if test="model.isDeleted != null">
                AND is_deleted = #{model.isDeleted}
            </if>
        </trim>
    </sql>

    <sql id="page_condition">
        <if test="orderBy != null and sort != null">
            order by bar.${orderBy} ${sort}
        </if>
        <if test="orderBy != null and sort == null">
            order by bar.${orderBy} desc
        </if>
        <if test="start != null and pageSize != null">
            limit #{start} , #{pageSize}
        </if>
        <if test="start == null and pageSize != null">
            limit #{pageSize}
        </if>
        <if test="start == null and pageSize == null">
            limit 1000
        </if>
    </sql>

    <select id="generalQuery" parameterType="com.dtstack.dtcenter.common.pager.PageQuery" resultType="BatchAlarmRecord">
        SELECT
        <include refid="select_content_fragment"/>
        FROM rdos_batch_alarm_record bar
        <include refid="select_where_fragment"/>
        <include refid="page_condition"/>
    </select>

    <select id="generalCount" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM rdos_batch_alarm_record bar
        <include refid="select_where_fragment"/>
        limit 1
    </select>

    <select id="getOne" resultType="BatchAlarmRecord">
        SELECT
        <include refid="select_content_fragment"/>
        FROM rdos_batch_alarm_record
        WHERE id = #{id} AND is_deleted = 0
    </select>

    <sql id="select_where_for_condition">
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            <if test="model.isDeleted != null">
                AND bar.is_deleted = #{model.isDeleted}
                AND ba.is_deleted = #{model.isDeleted}
            </if>

            <if test="model.projectId != null">
                AND bar.project_id = #{model.projectId}
            </if>

            <if test="model.taskIdList != null and model.taskIdList.size() > 0">
                AND ba.task_id IN
                <foreach collection="model.taskIdList" index="index" item="taskId" open="(" separator="," close=")">
                    #{taskId}
                </foreach>
            </if>

            <if test="model.alarmIdList != null and model.alarmIdList.size() > 0">
                AND ba.id IN
                <foreach collection="model.alarmIdList" item="alarmId" index="index" open="(" separator="," close=")">
                    #{alarmId}
                </foreach>
            </if>

            <if test="model.startTime != null">
                AND UNIX_TIMESTAMP(bar.gmt_create) >= #{model.startTime}
            </if>

            <if test="model.endTime != null">
                AND #{model.endTime} >= UNIX_TIMESTAMP(bar.gmt_create)
            </if>
        </trim>
    </sql>

    <select id="listByCondition" parameterType="com.dtstack.dtcenter.common.pager.PageQuery" resultType="java.util.Map">
        SELECT bar.id as id, bar.alarm_content as alarmContent,
        bar.alarm_id as alarmId, bar.gmt_create as createTime, ba.create_user_id as createUserId, ba.task_id as taskId,
        ifnull(ba.sender_type, 0) as senderType, ifnull(bar.trigger_type, 0) as myTrigger
        FROM rdos_batch_alarm_record bar
        LEFT JOIN rdos_batch_alarm ba ON bar.alarm_id = ba.id
        <include refid="select_where_for_condition" />
        <include refid="page_condition" />
    </select>

    <select id="countByCondition" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM rdos_batch_alarm_record bar
        LEFT JOIN rdos_batch_alarm ba ON bar.alarm_id = ba.id
        <include refid="select_where_for_condition"/>
        limit 1
    </select>

    <select id="countAlarmToday" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM rdos_batch_alarm_record record
        left join rdos_batch_alarm alarm on record.alarm_id = alarm.id
        WHERE
        record.project_id = #{projectId} AND TO_DAYS(record.gmt_create) = TO_DAYS(NOW())
        and alarm.is_deleted=0
        and alarm.app_type = #{appType}
    </select>

    <select id="countAlarmWeek" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM rdos_batch_alarm_record record
        left join rdos_batch_alarm alarm on record.alarm_id = alarm.id
        WHERE
        record.project_id = #{projectId} AND TO_DAYS(record.gmt_create) >= TO_DAYS(NOW())-7
        and alarm.is_deleted=0
        and alarm.app_type = #{appType}
    </select>

    <select id="countAlarmMonth" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM rdos_batch_alarm_record record
        left join rdos_batch_alarm alarm on record.alarm_id = alarm.id
        WHERE
        record.project_id = #{projectId} AND TO_DAYS(record.gmt_create) >= TO_DAYS(NOW())-30
        and alarm.is_deleted=0
        and alarm.app_type = #{appType}
    </select>

    <update id="deleteByAlarmId">
        UPDATE rdos_batch_alarm_record
        set is_deleted = 1,gmt_modified=now() WHERE alarm_id = #{alarmId}
    </update>

    <select id="listAlarmIds">
        SELECT
        alarm_id
        FROM rdos_batch_alarm_record
        WHERE id IN
        <foreach collection="ids" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        AND is_deleted = 0
    </select>

    <insert id="insert" parameterType="BatchAlarmRecord" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO rdos_batch_alarm_record
        (project_id,tenant_id,dtuic_tenant_id,app_type,alarm_id,cyc_time,alarm_content,trigger_type,gmt_create,gmt_modified,is_deleted)
        VALUES
        (#{projectId},#{tenantId}, #{dtuicTenantId}, #{appType},#{alarmId},#{cycTime},#{alarmContent},#{triggerType},#{gmtCreate},#{gmtModified},#{isDeleted})
    </insert>
</mapper>
